{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","addToSelected","item","setState","removeFromSelected","filter","del","clearSelected","createTitle","length","beforeAnd","slice","join","afterAnd","this","className","type","onClick","disabled","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,SAAU,CAAC,Q,EAGbC,cAAgB,SAACC,GACf,EAAKC,UAAS,SAACJ,GAAD,MACZ,CAAEC,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,CAAsBE,S,EAIpCE,mBAAqB,SAACF,GACpB,EAAKC,UAAS,SAACJ,GAAD,MACZ,CAAEC,SAAUD,EAAMC,SAASK,QAAO,SAAAC,GAAG,OAAIJ,IAASI,U,EAItDC,cAAgB,WACd,EAAKJ,SAAS,CAAEH,SAAU,M,EAG5BQ,YAAc,WACZ,IAAQR,EAAa,EAAKD,MAAlBC,SAER,OAAQA,EAASS,QACf,KAAK,EACH,MAAO,oBAGT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAS,GAAnB,gBAGF,QACE,IAAMU,EAAYV,EAASW,MAAM,GAAI,GAAGC,KAAK,MACvCC,EAAWb,EAASW,OAAO,GAEjC,MAAM,GAAN,OAAUD,EAAV,gBAA2BG,EAA3B,mB,4CAKN,WAAU,IAAD,OACCb,EAAac,KAAKf,MAAlBC,SAER,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,KAAKN,gBAClC,wBACEO,UAAU,aACVC,KAAK,SACLC,QAASH,KAAKP,cACdW,SAA8B,IAApBlB,EAASS,OAJrB,2BASF,oBAAIM,UAAU,iBAAd,SACGlB,EAAgBsB,KAAI,SAAAjB,GAAI,OACvB,qBAAIa,UAAWK,IAAW,aAAc,OAAQ,CAAE,qBAAsBpB,EAASqB,SAASnB,KAA1F,UACE,sBAAMa,UAAU,aAAhB,SAA8Bb,IAC7BF,EAASqB,SAASnB,GACjB,wBACEa,UAAU,6BACVC,KAAK,SACLC,QAAS,kBAAO,EAAKb,mBAAmBF,IAH1C,eAQA,wBACEa,UAAU,0BACVC,KAAK,SACLC,QAAS,kBAAO,EAAKhB,cAAcC,IAHrC,8B,GAvEEoB,IAAMC,WAuFTzB,IC1Gf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.45dc461b.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selected: ['Jam'],\n  };\n\n  addToSelected = (item:string) => {\n    this.setState((state) => (\n      { selected: [...state.selected, item] }\n    ));\n  };\n\n  removeFromSelected = (item:string) => {\n    this.setState((state) => (\n      { selected: state.selected.filter(del => item !== del) }\n    ));\n  };\n\n  clearSelected = () => {\n    this.setState({ selected: [] });\n  };\n\n  createTitle = () => {\n    const { selected } = this.state;\n\n    switch (selected.length) {\n      case 0: {\n        return 'No goods selected';\n      }\n\n      case 1: {\n        return `${selected[0]} is selected`;\n      }\n\n      default: {\n        const beforeAnd = selected.slice(0, -1).join(', ');\n        const afterAnd = selected.slice(-1);\n\n        return `${beforeAnd} and ${afterAnd} are selected`;\n      }\n    }\n  };\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__title title\">\n          <h1 className=\"title__text\">{this.createTitle()}</h1>\n          <button\n            className=\"title__btn\"\n            type=\"button\"\n            onClick={this.clearSelected}\n            disabled={selected.length === 0}\n          >\n            Delete all\n          </button>\n        </div>\n        <ul className=\"app__list list\">\n          {goodsFromServer.map(item => (\n            <li className={classNames('list__item', 'item', { 'list__item--active': selected.includes(item) })}>\n              <span className=\"item__text\">{item}</span>\n              {selected.includes(item) ? (\n                <button\n                  className=\"item__btn item__btn-remove\"\n                  type=\"button\"\n                  onClick={() => (this.removeFromSelected(item))}\n                >\n                  -\n                </button>\n              ) : (\n                <button\n                  className=\"item__btn item__btn-add\"\n                  type=\"button\"\n                  onClick={() => (this.addToSelected(item))}\n                >\n                  +\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}